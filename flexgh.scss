---
---

/*
> #fleXGH#
> Author: Clayton Duarte
> Organization: fleXGH
> Contributors:
  > Clayton Duarte :ant:
> Sites:  
  > http://flexgh.us
  > https://github.com/flexgh
> Created: 06.2017
*/

//imports
@import url('https://fonts.googleapis.com/css?family=Ubuntu:400,400i,700,700i');
//SETUP
$I: !important;
$transition: .3s ease;
$desktop: 'min-width: 520px';
$crossplat: '', '-moz-', '-webkit-';
$colors:
  success limegreen,
  info royalblue,
  warning gold,
  danger tomato,
  ghost ghostwhite,
  dark #333;
$info: #{nth(nth($colors, 2), 2)};
//mixins
@mixin cross($prop, $val) {
  @each $plataform in $crossplat {
   #{$plataform}#{$prop}: #{$val} #{$I};
  }      
}

//GLOBALS
body * {
  @include cross('display', 'flex');
  padding: 0 $I;
  margin: 0 $I;
}
body {
  font-family: 'Ubuntu', sans-serif;
  color: #333 $I;
  font-size: 20px;
  background: ghostwhite;
}
//texts
p, h1, h2, h3, h4, h5, h6 {
  margin-bottom: .5rem;
  font-weight: normal;
}
//links
a, button {
  color: #333 $I;
}
a:focus, a:active, a:visited {
  opacity: .9 $I;
}
a:hover, button:hover {
  opacity: .7 $I;
}
ul, ol {
  list-style: none;
}
hr {
  border: 0;
  border-bottom: 1px solid #333;
}
header sumary {
  font-size: 2rem;
}
header detail {
  opacity: .7;
}

//UTILITIES
//colors
@each $c in $colors {
  .#{nth($c, 1)} {
    color: #{nth($c, 2)} $I;
    border-color: #{nth($c, 2)} $I;
  }
  a.#{nth($c, 1)}, .#{nth($c, 1)} a {
    color: #{nth($c, 2)} $I;
  }
  .bg-#{nth($c, 1)} {
    background-color: #{nth($c, 2)} $I;
    color: ghostwhite $I;
  }
}
//etc
.strong {
  font-weight: 700 $I;
}
.muted {
  opacity: .5 $I;
}
.wrap {
  padding: .5rem $I;
}
//grid
.flex-col, .flex-row {
  @for $i from 0 through 10 {
        .size-#{$i} {
            flex: #{$i} 1 auto $I;
        }
    }
}
.center * {
  justify-content: space-around $I;
}
.start * {
  justify-content: flex-start $I;
}
.end * {
  justify-content: flex-end $I;
}
.flex-col {
  flex-direction: column $I;
  margin: 1rem 0 $I;
}
.flex-row {
  flex-direction: row $I;
  align-items: baseline $I;
  padding: 0 1rem $I;
}
.onlysmall {
  display: inherit $I;
  @media only screen and ($desktop) {
  display: none $I;
  }
}
.onlylarge {
  display: none $I;
  @media only screen and ($desktop) {
  display: inherit $I;
  }
}
// spacing
$list: 'p' 'padding', 'm' 'margin';
@each $prop in $list {
    @for $i from 0 through 10 {
        //top
        .#{nth($prop, 1)}t-#{$i} {
            #{nth($prop, 2)}-top: #{$i}rem $I;
        }
        //bottom
        .#{nth($prop, 1)}b-#{$i} {
            #{nth($prop, 2)}-bottom: #{$i}rem $I;
        }
        //left
        .#{nth($prop, 1)}l-#{$i} {
            #{nth($prop, 2)}-left: #{$i}rem $I;
        }
        //right
        .#{nth($prop, 1)}r-#{$i} {
            #{nth($prop, 2)}-right: #{$i}rem $I;
        }
        // x-axis
        .#{nth($prop, 1)}x-#{$i} {
            #{nth($prop, 2)}-left: #{$i}rem $I;
            #{nth($prop, 2)}-right: #{$i}rem $I;
        }
        // y-axis
        .#{nth($prop, 1)}y-#{$i} {
            #{nth($prop, 2)}-top: #{$i}rem $I;
            #{nth($prop, 2)}-bottom: #{$i}rem $I;
        }
        // all!
        .#{nth($prop, 1)}-#{$i} {
            #{nth($prop, 2)}: #{$i}rem $I;
        }
    }    
}
//END