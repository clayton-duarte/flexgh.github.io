/*
#fleXGH#
Author: Clayton Duarte
Organization: fleXGH
Contributors:> Clayton Duarte :ant:
Sites:  > http://flexgh.us> https://github.com/flexgh
Created: 06.2017
*/

//SETUP
$I: !important;
$transition: .3s ease;
$colors: success limegreen,
info royalblue,
warning gold,
danger tomato,
ghost ghostwhite,
dark #333;
//GLOBALS
body *:not(script) {
  flex: 1 1 auto;
  display: flex;
  padding: 0 $I;
  margin: 0 $I;
}

body {
  font-family: 'Ubuntu', sans-serif;
  color: #333 $I;
  font-size: 20px;
  background: ghostwhite;
} //texts
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: .5rem;
  font-weight: normal;
} //links
a,
button {
  color: #333 $I;
}

a:focus,
a:active,
a:visited {
  opacity: .9 $I;
}

a:hover,
button:hover {
  opacity: .7 $I;
}

ul,
ol {
  list-style: none;
}

hr {
  border: 0;
  border-bottom: 1px solid #333;
}

header sumary {
  font-size: 2rem;
}

header detail {
  opacity: .7;
} //UTILITIES
//colors
@each $c in $colors {
  .#{nth($c, 1)} {
    color: #{nth($c, 2)} $I;
    border-color: #{nth($c, 2)} $I;
  }
  a.#{nth($c, 1)},
  .#{nth($c, 1)} a {
    color: #{nth($c, 2)} $I;
  }
  .bg-#{nth($c, 1)} {
    background-color: #{nth($c, 2)} $I;
    color: ghostwhite $I;
  }
}

//borders
$borders: (b (border)),
(bt (border-top)),
(bl (border-left)),
(bb (border-bottom)),
(br (border-right)),
(by (border-top, border-bottom)),
(bx (border-left, border-right));
@each $case in $borders {
  .#{nth($case, 1)} {
    @each $prop in nth($case, 2) {
      #{$prop}: solid 1px $I;
    }
  }
}

//etc
.strong {
  font-weight: 700 $I;
}

.muted {
  opacity: .5 $I;
}

.wrap {
  padding: .5rem $I;
}

//cols and rows
.col {
  flex-direction: column $I;
  margin: 1rem 0 $I;
}

.row {
  flex-direction: row $I;
  padding: 0 1rem $I;
}

//grid
.col,
.row {
  @for $i from 0 through 10 {
    .size-#{$i} {
      flex: #{$i} 1 auto $I;
    }
  }
}

.center * {
  justify-content: space-around $I;
}

.start * {
  justify-content: flex-start $I;
}

.end * {
  justify-content: flex-end $I;
}

//spacing
$list: 'p' 'padding',
'm' 'margin';
@each $prop in $list {
  @for $i from 0 through 10 {
    //top
    .#{nth($prop, 1)}t-#{$i} {
      #{nth($prop, 2)}-top: #{$i}rem $I;
    } //bottom
    .#{nth($prop, 1)}b-#{$i} {
      #{nth($prop, 2)}-bottom: #{$i}rem $I;
    } //left
    .#{nth($prop, 1)}l-#{$i} {
      #{nth($prop, 2)}-left: #{$i}rem $I;
    } //right
    .#{nth($prop, 1)}r-#{$i} {
      #{nth($prop, 2)}-right: #{$i}rem $I;
    } // x-axis
    .#{nth($prop, 1)}x-#{$i} {
      #{nth($prop, 2)}-left: #{$i}rem $I;
      #{nth($prop, 2)}-right: #{$i}rem $I;
    } // y-axis
    .#{nth($prop, 1)}y-#{$i} {
      #{nth($prop, 2)}-top: #{$i}rem $I;
      #{nth($prop, 2)}-bottom: #{$i}rem $I;
    } // all!
    .#{nth($prop, 1)}-#{$i} {
      #{nth($prop, 2)}: #{$i}rem $I;
    }
  }
} //BREAKPOINTS
$breakpoints: //
('small' "max-width:320px"),
('medium' "max-width:768px"),
('large' "max-width:1024px");
@each $display in $breakpoints {
  @media only screen and (#{nth($display, 2)}) {
    .#{nth($display, 1)}.row {
      flex-direction: column $I;
      * {
        flex: 1 1 auto $I;
      }
    }
    .hide#{nth($display, 1)} {
      display: none $I;
    }
  }
}

//END